<?php
/**
 * @file
 */

/**
 * Implements hook_views_api().
 */
function supporto_istanze_views_api()
{
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'supporto_istanze'),
  );
}

/**
 * Implements hook_permission().
 */
function supporto_istanze_permission() {
  return array(
    'protocollato' => array(
      'title' => 'Protocollo',
      'description' => 'Impostare o togliere il campo <em>Protocollato</em>',
    ),
    'visto' => array(
      'title' => 'Visto del DS',
      'description' => 'Impostare o togliere il campo <em>Visto del DS</em>',
    ),
    'accolto' => array(
      'title' => 'Istanza accolta',
      'description' => 'Accogliere o rifiutare una istanza',
    ),
  );
}

/**
 * Implements hook_theme().
 */
function supporto_istanze_theme($existing, $type, $theme, $path) {
  return array(
    'supporto_istanze_views' => array(
      'variables' => array(
        'content' => NULL,
        'assoc' => array(),
      ),
      'file' => 'supporto_istanze.theme.inc',
      'template' => 'supporto-istanze-views',
    ),
  );
}

function supporto_istanze_forms($form_id, $args) {
  $forms = array();
  if (!empty($args) && !empty($form_id) && strpos($form_id, 'supporto_istanze_form_') === 0) {
    $forms[$form_id] = array ('callback' => 'supporto_istanze_form');
  }
  return $forms;
}

function supporto_istanze_form_submit($form, $form_state) {
  $input = $form_state['values'];
  _supporto_istanze_save_selection($input);
}

function supporto_istanze_form($form, &$form_state, $sid, $uid, $tid, $checked, $field) {
  $form['user'] = array(
    '#type' => 'value',
    '#name' => 'user',
    '#value' => $uid,
  );
  $form['submission'] = array(
    '#type' => 'value',
    '#name' => 'submission',
    '#value' => $sid,
  );
  $form['tid'] = array(
    '#type' => 'value',
    '#name' => 'tid',
    '#value' => $tid,
  );
  $form['field'] = array(
    '#type' => 'value',
    '#name' => 'field',
    '#value' => $field,
  );
  $form['is_ok'] = array(
    '#type' => 'checkbox',
    '#default_value' => $checked,
    '#attributes' => array(
      'onclick' => 'this.form.submit()',
      'title' => 'Selezionare per cambiare lo stato',
    ),
  );
  $form['hidden_submit'] = array(
    '#type' => 'submit',
    '#value' => 'Invia',
    '#attributes' => array(
      'style' => 'display:none',
    ),
  );
  return $form;
}

function _supporto_istanze_email($params) {
  $params['user'] = user_load($params['uid']);
  $data = db_query('SELECT title, submitted FROM {webform_submissions} AS s LEFT JOIN {node} AS n ON (s.nid = n.nid) WHERE sid = :sid', array(':sid' => $params['submission']))->fetchAssoc();
  if (!empty($data)) {
    $params['nomenodo'] = $data['title'];
    $params['timestamp'] = $data['submitted'];
  }
  drupal_mail('supporto_istanze', 'notifica', $params['user']->mail, language_default(), $params);  
}

function supporto_istanze_mail($key, &$message, $params) {
  $options = array(
    'langcode' => $message['language']->language,
  );
  $variables = array(
    '@nomesito' => variable_get('site_name', 'Drupal'),
    '@nome' => empty($params['user']->field_cognome)? $params['user']->name : $params['user']->field_nome['und'][0]['value'] . ' ' .$params['user']->field_cognome['und'][0]['value'],
    '@istanza' => $params['nomenodo'],
    '@istanza_id' => $params['submission'],
    '@data' => format_date($params['timestamp'], 'custom', 'd/m/Y'),
    '@esito' => $params['is_ok'] == 1? 'accolta' : 'respinta',
    '@motivazioni' => $params['reasons'],
  );
  
  switch($key) {
    case 'notifica':
      $message['subject'] = @t('Notifica di istanza evasa (@nomesito)', $variables, $options);
      $message['body'][] = @t("Gentile @nome,", $variables, $options);
      $message['body'][] = @t("La sua istanza @istanza, n. @istanza_id del @data, Ã¨ stata @esito.", $variables, $options);
      if ($params['is_ok'] == 2) {
        $message['body'][] = @t("Motivazioni: @motivazioni", $variables, $options);
      }
      break;
  }
}
  
function supporto_istanze_reasons_form_submit($form, &$form_state) {
  $input = $form_state['values'];
  db_update('supporto_istanze')
  ->fields(array(
    'accolto_stato' => $input['is_ok'],
    'accolto_data' => time(),
    'motivazioni' => $input['reasons'],
    ))
  ->condition('tid', $input['tid'])
  ->execute();
  drupal_set_message('Salvato esito istanza <em>' . $input['submission'] . '</em>.');
  _supporto_istanze_email($input);
  overlay_close_dialog('', array('external' => TRUE));
  $form_state['redirect'] = FALSE;
}

function supporto_istanze_reasons_form($form, &$form_state) {
  $tid = arg(5);
  $sid = arg(3);
  $result = db_query('SELECT * FROM {supporto_istanze} WHERE tid = :tid', array(':tid' => $tid));
  if ($result->rowCount() == 0) {
    drupal_set_message('Dati non trovati', 'warning');
  }
  $data = $result->fetchAssoc();
  $uid = $data['user_id'];
  $checked = $data['accolto_stato'];
  $reasons = $data['motivazioni'];

  $form['tid'] = array(
    '#type' => 'value',
    '#name' => 'tid',
    '#value' => $tid,
  );
  $form['uid'] = array(
    '#type' => 'value',
    '#name' => 'tid',
    '#value' => $uid,
  );
  $form['submission'] = array(
    '#type' => 'value',
    '#name' => 'submission',
    '#value' => $sid,
  );
  $form['is_ok'] = array(
    '#type' => 'radios',
    '#title' => 'accogli o respingi:',
    '#options' => array(
      1 => 'istanza accolta',
      2 => 'istanza respinta',
    ),
    '#default_value' => $checked? $checked : 1,
    '#attributes' => array(
      'title' => 'Selezionare per cambiare lo stato',
    ),
  );
  $form['reasons'] = array(
    '#name' => 'reasons',
    '#type' => 'textarea',
    '#title' => 'motivazioni, specie in caso di istanza respinta:',
    '#default_value' => $reasons,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Salva',
  );
  return $form;
}

function _supporto_istanze_save_selection($input) {
  if ($input['tid'] == 0) {
    $id = db_insert('supporto_istanze')
    ->fields(array(
      'user_id' => $input['user'],
      'submission_id' => $input['submission'],
      $input['field'] . '_stato' => $input['is_ok'],
      $input['field'] . '_data' => time(),
      ))
    ->execute();
  } else {
    db_update('supporto_istanze')
    ->fields(array(
      'user_id' => $input['user'],
      'submission_id' => $input['submission'],
      $input['field'] . '_stato' => $input['is_ok'],
      $input['field'] . '_data' => time(),
      ))
    ->condition('tid', $input['tid'])
    ->execute();
  }
  drupal_set_message('Salvato campo <em>'. $input['field'] . '</em> istanza <em>' . $input['submission'] . '</em>');
}

function _supporto_istanze_reset_field($fieldname, $markupvalue, $label, $description) {
  // Check if our field is not already created.
  if (!field_info_field($fieldname)) {
    $field = array(
      'field_name' => $fieldname, 
      'type' => 'markup', 
      'settings' => array(
        'default_value' => '',
        'markup' => array (
          'value' => $markupvalue,
          'format' => 'full_html',
        )
      )
    );
    field_create_field($field);
  }
  $node_types = node_type_get_types();
  foreach ($node_types as $node_type) {
    $bundle = $node_type->type;
    if ($bundle != 'istanze_del_personale') continue;
    if (!field_info_instance('node', $fieldname, $bundle)) {
      $instance = array(
        'field_name' => $fieldname, 
        'entity_type' => 'node', 
        'label' => $label,
        'description' => $description,
        'type' => 'markup', 
        'bundle' => $bundle, 
        'widget' => array(
          'type' => 'markup',
        ),
        'default_value' => '',
        'settings' => array(
          'defau:-)lt_value' => '',
          'markup' => array (
             'value' => $markupvalue,
             'format' => 'full_html',
          )
        )
      );
      field_create_instance($instance);
    }
  }
}

function supporto_istanze_admin_paths() {
  $paths = array(
    'node/*/submission/*/istanza/*' => TRUE,
  );
  return $paths;
} 

function supporto_istanze_menu() {
  $items = array();

  $items['node/%node/submission/%/istanza/%'] = array(
    'title' => 'Accogli istanza',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('supporto_istanze_reasons_form'),
    'access arguments' => array('accolto'),
    'weight' => 2,
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}
